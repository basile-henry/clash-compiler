[ { "BlackBox" :
    { "name"      : "Clash.Promoted.Nat.powSNat"
    , "type"      : "Clash.Promoted.Nat.powSNat :: SNat a -> SNat b -> SNat (a^b)"
    , "templateE" : "~LIT[0] ** ~LIT[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Promoted.Nat.flogBaseSNat"
    , "type"      : "Clash.Promoted.Nat.flogBaseSNat :: (2 <= base, 1 <= x)
                                                     => SNat base -- ARG[2]
                                                     -> SNat x    -- ARG[3]
                                                     -> SNat (FLog base x"
    , "imports"   : ["~INCLUDENAME[0].inc"]
    , "includes" :
      [ { "name" : "flogBase"
        , "extension" : "inc"
        , "content" :
"// floor of logBase
function integer ~INCLUDENAME[0];
  input integer base, value;
  begin
    for (~INCLUDENAME[0] = 0; value >= base; ~INCLUDENAME[0]=~INCLUDENAME[0]+1)
      value = value / base;
  end
endfunction"
        }
      ]
    , "templateE" : "~INCLUDENAME[0](~LIT[2],~LIT[3])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Promoted.Nat.clogBaseSNat"
    , "type"      : "Clash.Promoted.Nat.clogBaseSNat :: (2 <= base, 1 <= x)
                                                     => SNat base -- ARG[2]
                                                     -> SNat x    -- ARG[3]
                                                     -> SNat (CLog base x"
    , "imports"   : ["~INCLUDENAME[0].inc"]
    , "includes" :
      [ { "name" : "clogBase"
        , "extension" : "inc"
        , "content" :
"// ceiling of logBase
function integer ~INCLUDENAME[0];
  input integer base, value;
  begin
    for (~INCLUDENAME[0] = 0; base ** ~INCLUDENAME[0] < value; ~~INCLUDENAME[0]=~INCLUDENAME[0]+1);
  end
endfunction"
        }
      ]
    , "templateE" : "~INCLUDENAME[0](~LIT[2],~LIT[3])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Promoted.Nat.logBaseSNat"
    , "type"      : "Clash.Promoted.Nat.logBaseSNat :: (FLog base x ~ CLog base x)
                                                    => SNat base -- ARG[1]
                                                    -> SNat x    -- ARG[2]
                                                    -> SNat (Log base x)"
    , "imports"   : ["~INCLUDENAME[0].inc"]
    , "includes" :
      [ { "name" : "clogBase"
        , "extension" : "inc"
        , "content" :
"// logBaseSNat begin
function integer ~INCLUDENAME[0];
  input integer base, value;
  begin
    for (~INCLUDENAME[0] = 0; value >= base; ~INCLUDENAME[0]=~INCLUDENAME[0]+1)
      value = value / base;
  end
endfunction"
        }
      ]
    , "templateE" :  "~INCLUDENAME[0](~LIT[1],~LIT[2])"
    }
  }
]
